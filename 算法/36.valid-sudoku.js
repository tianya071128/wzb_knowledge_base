/*
 * @lc app=leetcode.cn id=36 lang=javascript
 * @lcpr version=30204
 *
 * [36] 有效的数独
 */

// @lcpr-template-start

// @lcpr-template-end
// @lc code=start
[
  ['.', '.', '4', '.', '.', '.', '6', '3', '.'],
  ['.', '.', '.', '.', '.', '.', '.', '.', '.'],
  ['5', '.', '.', '.', '.', '.', '.', '9', '.'],
  ['.', '.', '.', '5', '6', '.', '.', '.', '.'],
  ['4', '.', '3', '.', '.', '.', '.', '.', '1'],
  ['.', '.', '.', '7', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '5', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '.', '.', '.', '.', '.'],
  ['.', '.', '.', '.', '.', '.', '.', '.', '.'],
];
/**
 * @param {character[][]} board
 * @return {boolean}
 */
var isValidSudoku = function (board) {
  /**
   * 解题思路: 主要是确定三个界限 --> 行和列和每个宫格，以及在每个界限的值是否有重复的
   *  1. 每项都要迭代一次
   *  2. 确定每项在 行和列的宫格 中的索引
   *  3. 在索引处提取出 哈希表，确定是否重复
   */
  const row = new Array(9).fill(1).map(() => new Set()),
    column = new Array(9).fill(1).map(() => new Set());
  palace = new Array(9).fill(1).map(() => new Set());
  for (let i = 0; i < board.length; i++) {
    for (let j = 0; j < board[i].length; j++) {
      const item = board[i][j];
      if (item === '.') continue;

      // 行索引就是 i, 列索引就是 j 主要是断定宫格索引
      const palaceIndex = Math.floor(i / 3) * 3 + Math.floor(j / 3);
      if (
        row[i].has(item) ||
        column[j].has(item) ||
        palace[palaceIndex].has(item)
      ) {
        return false;
      }

      row[i].add(item);
      column[j].add(item);
      palace[palaceIndex].add(item);
    }
  }

  return true;
};
// @lc code=end

/*
// @lcpr case=start
// [["5","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]]\n
// @lcpr case=end

// @lcpr case=start
// [["8","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]]\n
// @lcpr case=end

 */

// @lcpr-after-debug-begin
module.exports = isValidSudoku;
// @lcpr-after-debug-end

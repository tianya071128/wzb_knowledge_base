import{_ as s,c as i,o as a,aR as e}from"./chunks/framework.DLAwTCsc.js";const u=JSON.parse('{"title":"规则","description":"","frontmatter":{},"headers":[],"relativePath":"sass/rules.md","filePath":"02_工程化/07_scss/04_规则.md","lastUpdated":1739447932000}'),n={name:"sass/rules.md"},l=e(`<h1 id="规则" tabindex="-1">规则 <a class="header-anchor" href="#规则" aria-label="Permalink to &quot;规则&quot;">​</a></h1><p>Sass 的许多额外功能都以它在 CSS 之上添加的新 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/At-rule" target="_blank" rel="noreferrer">at-rules</a> 形式：</p><ul><li>@use：从其他 Sass 样式表中加载 mixins、函数和变量，并将来自多个样式表的 CSS 组合在一起。</li><li>@forward：加载 Sass 样式表，并在使用 @use 规则加载样式表时使其 mixins、函数和变量可用。</li><li>@import：扩展<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@import" target="_blank" rel="noreferrer"> CSS @import at-rule</a> 以从其他样式表加载样式、mixin、函数和变量。</li><li>@mixin 和 @include：可以很容易地重用样式块。</li><li>@function：定义可在 SassScript 表达式中使用的自定义函数。</li><li>@extend：允许选择器相互继承样式。</li><li>@at-root：将其中的样式放在 CSS 文档的根目录中。</li><li>@error：导致编译失败并显示错误消息。</li><li>@warn：在不完全停止编译的情况下打印警告。</li><li>@debug：出于调试目的打印消息。</li><li>流控制规则，如 @if, @each,@for 和 @while 控制是否发出样式或发出多少次。</li></ul><h2 id="error-错误" tabindex="-1">@error 错误 <a class="header-anchor" href="#error-错误" aria-label="Permalink to &quot;@error 错误&quot;">​</a></h2><p><code>@error</code> 规则的语法格式为：<code>@error &lt;expression&gt;</code>。打印表达式的值(通常是字符串)以及当前堆栈跟踪，并且停止编译并输出错误</p><div class="language-scss vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@mixin</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reflexive-position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$property</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">$value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @if</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $property</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> left</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> $property</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Property </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#{$property}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> must be either left or right.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.sidebar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @include</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reflexive-position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Error: Property top must be either left or right.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="warn-警告" tabindex="-1">@warn 警告 <a class="header-anchor" href="#warn-警告" aria-label="Permalink to &quot;@warn 警告&quot;">​</a></h2><p><code>@warn</code> 规则的语法格式为：<code>@warn &lt;expression&gt;</code>。打印表达式的值(通常是字符串)以及当前堆栈跟踪，与<code>@error</code> 规则不同的是，它并不会阻止 Sass 进行编译，只是会输出警告信息</p><div class="language-scss vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@warn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;这是一个警告&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Warning: 这是一个警告</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 01.scss 1:1  root stylesheet</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="debug-调试" tabindex="-1">@debug 调试 <a class="header-anchor" href="#debug-调试" aria-label="Permalink to &quot;@debug 调试&quot;">​</a></h2><p><code>@debug</code> 规则的语法格式为：<code>@debug &lt;expression&gt;</code>。打印出该表达式的值，以及文件名和行号。</p><div class="language-scss vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@debug</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;这是一个: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#{调试信息}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 01.scss:1 Debug: 这是一个: 调试信息</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,12),r=[l];function t(p,h,k,d,o,c){return a(),i("div",null,r)}const b=s(n,[["render",t]]);export{u as __pageData,b as default};

import{_ as a,c as l,o as i,aR as e,eZ as o,e_ as t,e$ as s,f0 as p,f1 as r,f2 as c,f3 as d,f4 as n,f5 as _}from"./chunks/framework.DLAwTCsc.js";const x=JSON.parse('{"title":"调试","description":"","frontmatter":{},"headers":[],"relativePath":"devtools/sources/debug.md","filePath":"04_更多/02_开发者工具/23_源代码_调试.md","lastUpdated":1739447932000}'),m={name:"devtools/sources/debug.md"},h=e('<h1 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-label="Permalink to &quot;调试&quot;">​</a></h1><h2 id="使用断点暂停代码" tabindex="-1">使用断点暂停代码 <a class="header-anchor" href="#使用断点暂停代码" aria-label="Permalink to &quot;使用断点暂停代码&quot;">​</a></h2><p>如何设置断点以及断点类型<a href="./break.html">参考</a></p><p>断点暂停代码执行时：</p><ul><li><p>调试程序会评估当前函数中的所有变量、常量和对象</p></li><li><p><code>控制台</code> 的上下文是当前调用栈，即可以在控制台查询已评估的变量、常量和对象。</p></li><li><p>将鼠标悬停在类或函数名称上即可预览其属性。</p></li></ul><p><img src="'+o+'" alt="image" loading="lazy"></p><h2 id="调试代码" tabindex="-1">调试代码 <a class="header-anchor" href="#调试代码" aria-label="Permalink to &quot;调试代码&quot;">​</a></h2><p>代码暂停后，有多种方式进行调试，调查整个过程中的控制流和属性值。</p><ul><li><p>跳过下一个函数调用：在代码行暂停时，如果代码行包含与您要调试的问题无关的函数，可点击 <img src="'+t+'" alt="image" style="display:inline-block;" loading="lazy"> 以<strong>执行该函数而不进入该函数</strong>。</p></li><li><p>进入下一个函数调用：在包含与您正在调试的问题相关的函数调用的代码行上暂停时，可点击 <img src="'+s+'" alt="image" style="display:inline-block;" loading="lazy"> 单步进入 以进一步执行该函数。</p></li><li><p>跳出当前函数：在与您正在调试的问题无关的函数内暂停时，可点击 <img src="'+p+'" alt="image" style="display:inline-block;" loading="lazy"> 单步退出 以执行函数的其余部分。</p></li><li><p>继续执行脚本：在暂停后继续执行脚本，可点击 <img src="'+r+'" alt="image" style="display:inline-block;" loading="lazy"> 继续执行脚本。开发者工具会一直执行此脚本，直到出现下一个断点（如果有）。</p></li><li><p>运行特定行之前的所有代码：右键点击您感兴趣的代码行，然后选择 <code>继续执行到此处</code>。开发者工具会运行该时间点之前的所有代码，然后在该行暂停。</p></li></ul><p><img src="'+c+'" alt="image" loading="lazy"></p><h2 id="查看和修改作用域" tabindex="-1">查看和修改作用域 <a class="header-anchor" href="#查看和修改作用域" aria-label="Permalink to &quot;查看和修改作用域&quot;">​</a></h2><p>在代码行暂停时，使用 <code>作用域</code> 窗格查看和修改局部作用域、闭包和全局作用域中的属性值：</p><ol><li><p><strong>双击属性值可进行更改</strong>。</p></li><li><p>非枚举属性呈灰显状态。</p></li></ol><p><img src="'+d+'" alt="image" loading="lazy"></p><h2 id="查看当前调用堆栈" tabindex="-1">查看当前调用堆栈 <a class="header-anchor" href="#查看当前调用堆栈" aria-label="Permalink to &quot;查看当前调用堆栈&quot;">​</a></h2><p>在某行代码上暂停时，使用 <code>调用堆栈</code> 窗格查看将您转到该位置的调用堆栈。</p><ul><li><p>点击任一条目，即可跳转到调用该函数的代码行。蓝色箭头图标表示开发者工具当前突出显示的函数。</p></li><li><p>如需观察某个函数的行为并重新运行它，而无需重启整个调试流程，您可以在该函数暂停时重新开始执行单个函数。</p><ul><li><p>您可以重启任何函数帧，但 WebAssembly、异步和生成器函数除外。</p></li><li><p><strong>重启不会恢复函数调用时的初始状态。而是直接将执行指针移至函数的开头。</strong></p></li></ul></li><li><p>启用 <code>显示已列入忽略列表的帧</code>, 显示已列入忽略列表的帧</p></li><li><p>右键点击 <code>调用堆栈</code> 窗格中的任意位置，然后选择 <code>复制堆栈轨迹</code> 以将当前调用堆栈复制到剪贴板。</p></li></ul><p><img src="'+n+'" alt="image" loading="lazy"></p><h2 id="观察自定义-javascript-表达式的值" tabindex="-1">观察自定义 JavaScript 表达式的值 <a class="header-anchor" href="#观察自定义-javascript-表达式的值" aria-label="Permalink to &quot;观察自定义 JavaScript 表达式的值&quot;">​</a></h2><p>使用 <code>监视</code> 窗格观察自定义表达式的值。您可以监视任何有效的 <code>JavaScript</code> 表达式。</p><p><img src="'+_+'" alt="image" loading="lazy"></p>',21),g=[h];function u(b,f,y,k,q,P){return i(),l("div",null,g)}const z=a(m,[["render",u]]);export{x as __pageData,z as default};

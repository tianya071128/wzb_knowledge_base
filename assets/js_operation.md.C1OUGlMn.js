import{_ as s,c as i,o as a,aR as n}from"./chunks/framework.DLAwTCsc.js";const g=JSON.parse('{"title":"二进制数据 - 文件操作","description":"","frontmatter":{"title":"二进制数据 - 文件操作","date":"2021-10-21T15:00:00.000Z","permalink":"/js/operation","categories":["前端","JS"],"tags":[null]},"headers":[],"relativePath":"js/operation.md","filePath":"01_前端/03_js/20_文件操作.md","lastUpdated":1739447932000}'),t={name:"js/operation.md"},l=n(`<h1 id="二进制数据-文件操作" tabindex="-1">二进制数据 - 文件操作 <a class="header-anchor" href="#二进制数据-文件操作" aria-label="Permalink to &quot;二进制数据 - 文件操作&quot;">​</a></h1><h2 id="下载自定义文件" tabindex="-1">下载自定义文件 <a class="header-anchor" href="#下载自定义文件" aria-label="Permalink to &quot;下载自定义文件&quot;">​</a></h2><p>步骤：生成指定 <code>Blob</code> 对象 -&gt; 生成临时 URL(或 base64) -&gt; 利用 a 标签下载</p><details class="details custom-block"><summary>查看代码</summary><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debug </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { hello: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> blob </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Blob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(debug, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)], {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;application/json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文件 MIME</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">link.download </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hello.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">link.href </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createObjectURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blob);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">link.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">revokeObjectURL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(link.href);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></details><h2 id="下载服务器资源" tabindex="-1">下载服务器资源 <a class="header-anchor" href="#下载服务器资源" aria-label="Permalink to &quot;下载服务器资源&quot;">​</a></h2><p>下载资源一般分如下情况</p><table><thead><tr><th></th><th>浏览器能够预览的资源(html、img、pdf 等)</th><th>不能预览的资源(zip、exe 等资源)</th></tr></thead><tbody><tr><td>同域</td><td>1. 使用 <code>a</code> 标签的 <code>download</code> 属性(兼容性问题)<br>2. 服务器返回 <code>Content-Disposition</code> 响应头</td><td>浏览器会直接下载</td></tr><tr><td>跨域</td><td>1. 服务器返回 <code>Content-Disposition</code> 响应头<br>2. 先让自己的服务器请求资源，返回二进制数据给前端下载<br>3. 服务器返回 <code>Access-Control-Allow-Origin</code> 允许跨域图片使用 <code>canvas</code> 画布去实现下载</td><td>浏览器会直接下载</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">注意</p><ol><li>服务器返回 <code>Content-Disposition</code> 头部字段的情况下，就会进行下载保存，兼容性最佳(在 IE8 下，跨域资源也会下载)</li><li>通过这种方式的话，返回 <code>Blob</code> 资源的时候 IE 可以使用 <code>navigator.msSaveBlob</code> 方法进行下载</li></ol></div><h2 id="预览选择图片并上传" tabindex="-1">预览选择图片并上传 <a class="header-anchor" href="#预览选择图片并上传" aria-label="Permalink to &quot;预览选择图片并上传&quot;">​</a></h2><p>步骤：获取用户选择的文件 -&gt; 生成 URL -&gt; 预览 -&gt; 使用 <code>form-data</code> 上传 -&gt; 获取上传进度 -&gt; 展示上传进度 -&gt; 上传图片显示</p>`,10),e=[l];function h(p,k,r,d,o,E){return a(),i("div",null,e)}const y=s(t,[["render",h]]);export{g as __pageData,y as default};

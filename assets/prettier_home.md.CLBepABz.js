import{_ as e,c as r,o as a,aR as s}from"./chunks/framework.DLAwTCsc.js";const E=JSON.parse('{"title":"Prettier","description":"","frontmatter":{"title":"Prettier","date":"2021-10-21T15:00:00.000Z","permalink":"/otherEngineering/","categories":"-- 工程化 -- 其他","tags":[null]},"headers":[],"relativePath":"prettier/home.md","filePath":"02_工程化/08_Prettier/01_home.md","lastUpdated":1739447932000}'),i={name:"prettier/home.md"},t=s(`<h1 id="prettier" tabindex="-1">Prettier <a class="header-anchor" href="#prettier" aria-label="Permalink to &quot;Prettier&quot;">​</a></h1><p>Prettier 是一个 opinionated(表示可配置项很少) 的代码格式化程序。</p><h2 id="支持的语言列表" tabindex="-1">支持的语言列表 <a class="header-anchor" href="#支持的语言列表" aria-label="Permalink to &quot;支持的语言列表&quot;">​</a></h2><ul><li>JavaScript (包含实验性功能)</li><li><a href="https://facebook.github.io/jsx/" target="_blank" rel="noreferrer">JSX</a></li><li><a href="https://angular.io/" target="_blank" rel="noreferrer">Angular</a></li><li><a href="https://vuejs.org/" target="_blank" rel="noreferrer">Vue</a></li><li><a href="https://flow.org/" target="_blank" rel="noreferrer">Flow</a></li><li><a href="https://www.typescriptlang.org/" target="_blank" rel="noreferrer">TypeScript</a></li><li>CSS, <a href="http://lesscss.org/" target="_blank" rel="noreferrer">Less</a>, and <a href="https://sass-lang.com/" target="_blank" rel="noreferrer">SCSS</a></li><li><a href="https://en.wikipedia.org/wiki/HTML" target="_blank" rel="noreferrer">HTML</a></li><li><a href="https://json.org/" target="_blank" rel="noreferrer">JSON</a></li><li><a href="https://graphql.org/" target="_blank" rel="noreferrer">GraphQL</a></li><li><a href="https://commonmark.org/" target="_blank" rel="noreferrer">Markdown</a>, including <a href="https://github.github.com/gfm/" target="_blank" rel="noreferrer">GFM</a> and <a href="https://mdxjs.com/" target="_blank" rel="noreferrer">MDX</a></li><li><a href="https://yaml.org/" target="_blank" rel="noreferrer">YAML</a></li></ul><h2 id="prettier-与-linter-区别" tabindex="-1">Prettier 与 Linter 区别 <a class="header-anchor" href="#prettier-与-linter-区别" aria-label="Permalink to &quot;Prettier 与 Linter 区别&quot;">​</a></h2><p>Prettier 与 Linter（eslint、TSlint 等）比较：</p><p>Linter 主要有两类规则：</p><ul><li><p>格式规则：例如：<a href="https://eslint.org/docs/rules/max-len" target="_blank" rel="noreferrer">max-len</a>、<a href="https://eslint.org/docs/rules/no-mixed-spaces-and-tabs" target="_blank" rel="noreferrer">no-mixed-spaces-and-tabs</a>、<a href="https://eslint.org/docs/rules/keyword-spacing" target="_blank" rel="noreferrer">keyword-spacing</a>、<a href="https://eslint.org/docs/rules/comma-style" target="_blank" rel="noreferrer">comma-style</a> ...</p><p>对于这类规则，Prettier 能够减轻对这一套规则的配置需求，能够较好的工作</p></li><li><p><strong>代码质量规则</strong>：例如<a href="https://eslint.org/docs/rules/no-unused-vars" target="_blank" rel="noreferrer">no-unused-vars</a>、<a href="https://eslint.org/docs/rules/no-extra-bind" target="_blank" rel="noreferrer">no-extra-bind</a>、<a href="https://eslint.org/docs/rules/no-implicit-globals" target="_blank" rel="noreferrer">no-implicit-globals</a>、<a href="https://eslint.org/docs/rules/prefer-promise-reject-errors" target="_blank" rel="noreferrer">prefer-promise-reject-errors</a> ...</p><p><strong>对于这类规则，Prettier 没有办法做到。这也是 Linter 主要的工作范围</strong></p></li></ul><p>换句话说，使用 <strong>Prettier 进行格式化</strong>并使用 <strong>linter</strong> 来捕获错误！</p><h2 id="忽略配置" tabindex="-1">忽略配置 <a class="header-anchor" href="#忽略配置" aria-label="Permalink to &quot;忽略配置&quot;">​</a></h2><h3 id="忽略整个文件或文件夹" tabindex="-1">忽略整个文件或文件夹 <a class="header-anchor" href="#忽略整个文件或文件夹" aria-label="Permalink to &quot;忽略整个文件或文件夹&quot;">​</a></h3><p>使用 <code>.prettierignore</code> 文件，使用<a href="https://git-scm.com/docs/gitignore#_pattern_format" target="_blank" rel="noreferrer">gitignore 语法</a>。</p><h3 id="忽略文件的一部分" tabindex="-1">忽略文件的一部分 <a class="header-anchor" href="#忽略文件的一部分" aria-label="Permalink to &quot;忽略文件的一部分&quot;">​</a></h3><p>使用 <code>prettier-ignore</code> 忽略文件的一部分，根据语言的不同格式也不同</p><p><a href="https://prettier.io/docs/en/ignore.html#javascript" target="_blank" rel="noreferrer">参考</a></p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h3 id="配置文件" tabindex="-1">配置文件 <a class="header-anchor" href="#配置文件" aria-label="Permalink to &quot;配置文件&quot;">​</a></h3><p>使用 <a href="https://github.com/davidtheclark/cosmiconfig" target="_blank" rel="noreferrer">cosmiconfig</a>来支持配置文件。这也是比较通用的配置规范</p><p>优先级如下：</p><ul><li><code>package.json</code> 文件中的 <code>&quot;prettier&quot;</code>键。</li><li><code>.prettierrc</code>用 JSON 或 YAML 编写的文件。</li><li><code>.prettierrc.json</code>，<code>.prettierrc.yml</code>，<code>.prettierrc.yaml</code>，或<code>.prettierrc.json5</code>文件。</li><li>使用<code>.prettierrc.js</code>、<code>.prettierrc.cjs</code>、<code>prettier.config.js</code>或<code>prettier.config.cjs</code>导出对象的文件<code>module.exports</code>。</li><li>一个<code>.prettierrc.toml</code>文件。</li></ul><p><strong>在公司项目中，最好在项目根目录下配置 <code>.prettierrc</code> 和 <code>.prettierignore</code> 文件配置</strong></p><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-label="Permalink to &quot;选项&quot;">​</a></h3><p>Prettier 是一个配值项很少的程序，以下是一般选项, 具体见<a href="https://prettier.io/docs/en/options.html" target="_blank" rel="noreferrer">官方文档-配置项</a></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tabWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 缩进字节数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  useTabs: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 缩进不使用tab，使用空格</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  endOfLine: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;auto&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 结尾是 \\n \\r \\n\\r auto</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  singleQuote: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true: 单引号, false: 双引号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  semi: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 末尾是否需要分号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  trailingComma: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;es5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在对象或数组最后一个元素后面是否加逗号（在ES5中加尾逗号）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bracketSpacing: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在对象，数组括号与文字之间加空格 &quot;{ foo: bar }&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bracketSameLine: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文档显示为 html 结束标签不另起一行, 不起作用, 记录一下...(因为 vscode Prettier 插件不支持)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  jsxBracketSameLine: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  htmlWhitespaceSensitivity: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ignore&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解决包裹文字时候结束标签的结尾尖括号掉到了下一行 -- 虽然并没有碰到这个问题, 记录一下</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/81764012?from_voters_page=true" target="_blank" rel="noreferrer">知乎-Prettier</a></li><li><a href="https://prettier.io/docs/en/index.html" target="_blank" rel="noreferrer">官方文档</a></li></ul>`,26),n=[t];function l(h,p,o,k,d,c){return a(),r("div",null,n)}const b=e(i,[["render",l]]);export{E as __pageData,b as default};

import{_ as s,c as i,o as a,aR as n,bG as e,bH as l}from"./chunks/framework.DLAwTCsc.js";const m=JSON.parse('{"title":"几何位置","description":"","frontmatter":{},"headers":[],"relativePath":"js/geometry.md","filePath":"01_前端/03_js/12_DOM_几何位置.md","lastUpdated":1739447932000}'),t={name:"js/geometry.md"},p=n('<h1 id="几何位置" tabindex="-1">几何位置 <a class="header-anchor" href="#几何位置" aria-label="Permalink to &quot;几何位置&quot;">​</a></h1><p>几何位置包括元素大小、滚动、坐标以及窗口的大小和滚动。</p><h2 id="元素几何" tabindex="-1">元素几何 <a class="header-anchor" href="#元素几何" aria-label="Permalink to &quot;元素几何&quot;">​</a></h2><p>这个元素几何的整体图片：</p><p><img src="'+e+`" alt="image-20211203112041399" loading="lazy"></p><p>元素具有一下几何属性(从重要性依次排序)：</p><ul><li><strong>scrollLeft/scrollTop</strong> — 滚动距离。</li><li><strong>scrollWidth/scrollHeight</strong> — 元素的宽/高 + 内边距 + 滚动距离。<strong>不包括边框、滚动条。</strong></li><li><strong>offsetWidth/offsetHeight</strong> — 元素的宽/高 + 滚动条 + 内边距 + 边框。</li><li><strong>clientWidth/clientHeight</strong> — 元素的宽/高 + 内边距。<strong>不包括边框、滚动条。</strong></li><li><code>offsetParent</code> — 是最接近的 CSS 定位的祖先，或者是 <code>td</code>，<code>th</code>，<code>table</code>，<code>body</code>。</li><li><code>offsetLeft/offsetTop</code> — 是相对于 <code>offsetParent</code> 的左上角边缘的坐标。</li><li><code>clientLeft/clientTop</code> — 从元素左上角外角到左上角内角的距离。对于从左到右显示内容的操作系统来说，它们始终是左侧/顶部 border 的宽度。而对于从右到左显示内容的操作系统来说，垂直滚动条在左边，所以 <code>clientLeft</code> 也包括滚动条的宽度。</li></ul><p>除了 <code>scrollLeft/scrollTop</code> 外，所有属性都是只读的。如果我们修改 <code>scrollLeft/scrollTop</code>，浏览器会滚动对应的元素。</p><div class="tip custom-block"><p class="custom-block-title">获取滚动条的宽度</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> div</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">div.style.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;100px&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">div.style.height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;100px&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">div.style.overflow </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;scroll&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.body.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(div);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 没有内边距和边框的情况下，通过 div.offsetWidth - div.clientWidth 公式即可计算出</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(div.offsetWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> div.clientWidth);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.body.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(div);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><h2 id="文档几何" tabindex="-1">文档几何 <a class="header-anchor" href="#文档几何" aria-label="Permalink to &quot;文档几何&quot;">​</a></h2><p>以下为兼容性较好的，其他见：<a href="https://zh.javascript.info/size-and-scroll-window" target="_blank" rel="noreferrer">JS 教程</a></p><ul><li><p>文档可见部分的 width/height（内容区域的 width/height）：document.documentElement.clientWidth/clientHeight</p></li><li><p>整个文档的 width/height，其中包括滚动出去的部分：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scrollHeight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.body.scrollHeight,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.documentElement.scrollHeight,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.body.offsetHeight,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.documentElement.offsetHeight,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.body.clientHeight,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.documentElement.clientHeight</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>文档滚动距离：window.pageYOffset/pageXOffset</p></li></ul><h2 id="文档-元素-滚动" tabindex="-1">文档(元素)滚动 <a class="header-anchor" href="#文档-元素-滚动" aria-label="Permalink to &quot;文档(元素)滚动&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">注意</p><p>必须在 DOM 完全构建好之后才能通过 JavaScript 滚动页面。</p><p>例如，如果我们尝试通过 <code>&lt;head&gt;</code> 中的脚本滚动页面，它将无法正常工作。</p></div><h3 id="元素-element-滚动" tabindex="-1">元素(Element) 滚动 <a class="header-anchor" href="#元素-element-滚动" aria-label="Permalink to &quot;元素(Element) 滚动&quot;">​</a></h3><ol><li>通过更改 <code>scrollTop/scrollLeft</code> 来滚动常规元素。</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollIntoView" target="_blank" rel="noreferrer">Element.scrollIntoView()</a> 方法进行滚动</li></ol><h3 id="文档滚动" tabindex="-1">文档滚动 <a class="header-anchor" href="#文档滚动" aria-label="Permalink to &quot;文档滚动&quot;">​</a></h3><ol><li><p>使用 <code>document.documentElement.scrollTop/scrollLeft</code> 对页面进行滚动（Safari 除外，而应该使用 <code>document.body.scrollTop/Left</code> 代替）。</p></li><li><p><a href="https://developer.mozilla.org/zh/docs/Web/API/Window/scrollBy" target="_blank" rel="noreferrer">window.scrollBy(x,y)</a>：将页面滚动至 <strong>相对于当前位置的 <code>(x, y)</code> 位置</strong>。</p></li><li><p><a href="https://developer.mozilla.org/zh/docs/Web/API/Window/scrollTo" target="_blank" rel="noreferrer">window.scrollTo(pageX,pageY)</a>：将页面滚动至 <strong>绝对坐标。</strong></p></li></ol><h3 id="禁止滚动" tabindex="-1">禁止滚动 <a class="header-anchor" href="#禁止滚动" aria-label="Permalink to &quot;禁止滚动&quot;">​</a></h3><p>要使文档不可滚动，只需要设置 <code>document.body.style.overflow = &quot;hidden&quot;</code>。</p><p>还需要注意滚动条的存在，如果滚动条存在，在禁止滚动的时候需要计算与滚动条的大小，在 <code>document.body</code> 中滚动条原来的位置处通过添加 <code>padding</code>，来替代滚动条</p><h2 id="元素坐标" tabindex="-1">元素坐标 <a class="header-anchor" href="#元素坐标" aria-label="Permalink to &quot;元素坐标&quot;">​</a></h2><p>elem.getBoundingClientRect()：获取指定元素在文档可视区的坐标</p><p><img src="`+l+`" alt="image-20211203154708848" loading="lazy"></p><ol><li><p>相对于文档可视区的坐标 — <code>elem.getBoundingClientRect()</code>。</p></li><li><p>相对于文档的坐标 — <code>elem.getBoundingClientRect()</code> 加上当前页面滚动。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取元素的文档坐标</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCoords</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">elem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> box </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> elem.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBoundingClientRect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    top: box.top </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.pageYOffset,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    right: box.right </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.pageXOffset,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bottom: box.bottom </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.pageYOffset,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    left: box.left </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.pageXOffset,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></li></ol><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://zh.javascript.info/size-and-scroll-window" target="_blank" rel="noreferrer">JS 教程-Window 大小和滚动</a></p>`,27),h=[p];function r(o,d,k,c,E,g){return a(),i("div",null,h)}const u=s(t,[["render",r]]);export{m as __pageData,u as default};

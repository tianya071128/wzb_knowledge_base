import{_ as a,c as e,o as s,aR as n}from"./chunks/framework.DLAwTCsc.js";const m=JSON.parse('{"title":"dedupe 去除重复包","description":"","frontmatter":{},"headers":[],"relativePath":"npm/npm-dedupe.md","filePath":"02_工程化/06_npm/15_命令_dedupe_去除重复包.md","lastUpdated":1739447932000}'),l={name:"npm/npm-dedupe.md"},p=n(`<h1 id="dedupe-去除重复包" tabindex="-1">dedupe 去除重复包 <a class="header-anchor" href="#dedupe-去除重复包" aria-label="Permalink to &quot;dedupe 去除重复包&quot;">​</a></h1><p><a href="https://docs.npmjs.com/cli/v10/commands/npm-dedupe" target="_blank" rel="noreferrer"><code>npm dedupe</code></a> 减少树中的重复包</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dedupe</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ddp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h2><ul><li>搜索本地包树并尝试通过将依赖项进一步向上移动树来简化整体结构，在这些树中它们可以更有效地由多个依赖包共享。</li><li>在 <code>--dry-run</code> 模式下运行 <code>npm dedupe</code>，使 <code>npm</code> 只输出重复项，而不实际更改包树。</li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p>例如，这个依赖关系图：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>a</span></span>
<span class="line"><span>+-- b &lt;-- depends on c@1.0.x</span></span>
<span class="line"><span>|   \`-- c@1.0.3</span></span>
<span class="line"><span>\`-- d &lt;-- depends on c@~1.0.9</span></span>
<span class="line"><span>    \`-- c@1.0.10</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>npm dedupe</code> 会将树转换为：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>a</span></span>
<span class="line"><span>+-- b</span></span>
<span class="line"><span>+-- d</span></span>
<span class="line"><span>\`-- c@1.0.10</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h3 id="global-g-全局模式" tabindex="-1"><code>--global, -g</code> 全局模式 <a class="header-anchor" href="#global-g-全局模式" aria-label="Permalink to &quot;\`--global, -g\` 全局模式&quot;">​</a></h3><ul><li>默认值：<code>false</code></li><li>类型：<code>boolean</code><ul><li><code>true</code>在“全局”模式下运行</li></ul></li></ul><h3 id="dry-run-试运行" tabindex="-1"><code>--dry-run</code> <strong>试运行</strong> <a class="header-anchor" href="#dry-run-试运行" aria-label="Permalink to &quot;\`--dry-run\` **试运行**&quot;">​</a></h3><ul><li>默认值：<code>false</code></li><li>类型：<code>boolean</code><ul><li><code>true</code>不进行更改</li></ul></li></ul><p>表示您不希望 <code>npm</code> 进行任何更改，并且它应该只报告它会做的事情。这可以传递到修改本地安装的任何命令中，例如，安装、更新、重复数据删除、卸载以及打包和发布。</p>`,16),i=[p];function d(r,c,o,t,u,h){return s(),e("div",null,i)}const _=a(l,[["render",d]]);export{m as __pageData,_ as default};

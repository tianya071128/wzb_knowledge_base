import{_ as a,c as s,o as e,aR as i}from"./chunks/framework.DLAwTCsc.js";const u=JSON.parse('{"title":"update 更新包","description":"","frontmatter":{},"headers":[],"relativePath":"npm/npm-update.md","filePath":"02_工程化/06_npm/11_命令_update_更新包.md","lastUpdated":1739447932000}'),n={name:"npm/npm-update.md"},l=i('<h1 id="update-更新包" tabindex="-1">update 更新包 <a class="header-anchor" href="#update-更新包" aria-label="Permalink to &quot;update 更新包&quot;">​</a></h1><p><a href="https://docs.npmjs.com/cli/v10/commands/npm-update" target="_blank" rel="noreferrer"><code>npm update</code></a> 用于更新包</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [&lt;pkg&gt;...]</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">aliases:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> udpate</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h2><ul><li><p><strong>此命令会将列出的所有包根据 <strong><code>package.json</code></strong> 文件中的版本规则更新到最新版本</strong> 例如：<code>&quot;vue&quot;: &quot;^2.4.4&quot;,</code> 此时会更新到版本 <code>&quot;2.6.14&quot;</code>，而不是最新的 <code>3.xx.xx</code> 版本</p></li><li><p>如果未指定包名称，则将更新指定位置（全局或本地）中的所有包。</p></li><li><p>如果指定了 -g 标志，此命令将更新全局安装的软件包。</p></li><li><p>默认情况下不会更新项目 <code>package.json</code> 中直接依赖项的 <code>semver</code> 值。</p><p>需要运行：<code>npm update --save</code>（或添加 <code>save=true</code> 选项到配置文件以使其成为默认行为）。</p></li><li><p><strong>如果软件包已升级到比最新版本更新的版本，它将被降级</strong>。</p></li><li><p><strong>注意：该命令无法指定版本更新(将会失败), 只会根据版本规则更新至最新版本, 如果需要更新到指定版本下, 那么需要使用 <strong><code>npm install</code></strong> 安装</strong></p></li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新所有包 -- 根据 package.json 版本约束更新</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新指定包 -- 根据 package.json 版本约束更新</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">package-spe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新全局包</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [&lt;package-spec&gt;...] -g</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 无法更新至指定版本，此时应该使用 npm install</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">package-spe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@版本</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 失败</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h3 id="save-s-是否更新-package-json-中的版本" tabindex="-1"><code>--save, -S</code> 是否更新 <code>package.json</code> 中的版本 <a class="header-anchor" href="#save-s-是否更新-package-json-中的版本" aria-label="Permalink to &quot;`--save, -S` 是否更新 `package.json` 中的版本&quot;">​</a></h3><ul><li>默认值: <code>false</code></li><li>类型：<code>boolean</code></li></ul><p><strong>注意: 默认情况下, 是不会更新 <strong><code>package.json</code></strong> 中的版本号的</strong></p><h3 id="global-g-全局安装" tabindex="-1"><code>--global, -g</code> 全局安装 <a class="header-anchor" href="#global-g-全局安装" aria-label="Permalink to &quot;`--global, -g` 全局安装&quot;">​</a></h3><ul><li>默认值：<code>false</code></li><li>类型：<code>boolean</code></li></ul><p>在“全局”模式下运行, 以便将包安装到全局文件夹而不是当前工作目录中。</p><h3 id="package-lock-是否更新-package-lock-文件中的版本" tabindex="-1"><code>--package-lock</code> 是否更新 <code>package-lock</code> 文件中的版本 <a class="header-anchor" href="#package-lock-是否更新-package-lock-文件中的版本" aria-label="Permalink to &quot;`--package-lock` 是否更新 `package-lock` 文件中的版本&quot;">​</a></h3><ul><li>默认值：<code>true</code></li><li>类型：<code>boolean</code></li></ul><p>默认情况下, 会自动更新 <code>package-lock</code> 锁文件的版本, 如果设置为 <code>false</code> 这将阻止写入 <code>package-lock.json</code>。</p><h3 id="install-strategy-安装策略" tabindex="-1"><code>install-strategy</code> 安装策略 <a class="header-anchor" href="#install-strategy-安装策略" aria-label="Permalink to &quot;`install-strategy` 安装策略&quot;">​</a></h3><ul><li>默认值：<code>hoisted</code></li><li>类型： &quot;hoisted&quot;, &quot;nested&quot;, &quot;shallow&quot;, or &quot;linked&quot;</li></ul><p>同 <a href="/wzb_knowledge_base/npm/npm-install.html#install-strategy-安装策略">安装包</a> 的参数</p>',20),p=[l];function t(o,d,h,c,r,k){return e(),s("div",null,p)}const b=a(n,[["render",t]]);export{u as __pageData,b as default};

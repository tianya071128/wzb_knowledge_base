import{_ as s,c as i,o as a,aR as n}from"./chunks/framework.DLAwTCsc.js";const F=JSON.parse('{"title":"run-script 运行脚本","description":"","frontmatter":{},"headers":[],"relativePath":"npm/npm-run-script.md","filePath":"02_工程化/06_npm/34_命令_runSrciprt_运行脚本.md","lastUpdated":1739447932000}'),e={name:"npm/npm-run-script.md"},t=n(`<h1 id="run-script-运行脚本" tabindex="-1">run-script 运行脚本 <a class="header-anchor" href="#run-script-运行脚本" aria-label="Permalink to &quot;run-script 运行脚本&quot;">​</a></h1><p><a href="https://docs.npmjs.com/cli/v10/commands/npm-run-script" target="_blank" rel="noreferrer"><code>npm run-script</code></a> 运行任意包脚本</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run-script</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">comman</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-- </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">arg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">aliases:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rum,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> urn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h2><ul><li><p>运行 <code>scripts</code> 字段中的任意命令，如果未提供 <code>“命令”</code>，它将列出可用的脚本。</p></li><li><p>使用 <code>--</code> 传递 --prefixed 标志和选项给指定脚本，而不传递给任何前置或后置脚本。</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 传递 grep=&quot;pattern&quot; 给 test 脚本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --grep=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pattern&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p><code>env</code> 脚本是一个特殊的内置命令，可用于列出脚本在运行时可用的环境变量。如果你的包中定义了 <code>“env”</code> 命令，它将优先于内置命令。</p></li></ul>`,5),p=[t];function l(r,h,d,c,k,o){return a(),i("div",null,p)}const _=s(e,[["render",l]]);export{F as __pageData,_ as default};

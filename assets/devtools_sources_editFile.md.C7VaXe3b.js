import{_ as l,D as i,c as s,l as e,I as c,aR as o,a,o as r,eM as d,eN as p,eO as _,eP as n,eQ as h}from"./chunks/framework.DLAwTCsc.js";const J=JSON.parse('{"title":"编辑文件","description":"","frontmatter":{},"headers":[],"relativePath":"devtools/sources/editFile.md","filePath":"04_更多/02_开发者工具/20_源代码_编辑文件.md","lastUpdated":1739447932000}'),m={name:"devtools/sources/editFile.md"},u=o('<h1 id="编辑文件" tabindex="-1">编辑文件 <a class="header-anchor" href="#编辑文件" aria-label="Permalink to &quot;编辑文件&quot;">​</a></h1><h2 id="编辑-css-和-javascript" tabindex="-1">编辑 CSS 和 JavaScript <a class="header-anchor" href="#编辑-css-和-javascript" aria-label="Permalink to &quot;编辑 CSS 和 JavaScript&quot;">​</a></h2><p>使用 <code>编辑</code> 窗格修改 CSS 和 JavaScript。</p><ul><li><p>修改元素的 CSS 的话, 会<strong>立即生效</strong></p><p><img src="'+d+'" alt="image" loading="lazy"></p></li><li><p>若要让 JavaScript 更改生效，请按 <code>Command+S (Mac)</code> 或 <code>Ctrl+S（Windows、Linux）</code>。<code>DevTools</code> 不会重新运行脚本，因此，只有您在函数内所做的 <code>JavaScript</code> 更改才会生效。</p><p><img src="'+p+'" alt="image" loading="lazy"></p></li></ul>',4),S={class:"tip custom-block"},g=e("p",{class:"custom-block-title"},"提示",-1),v=e("li",null,[e("p",null,"当重新加载页面时，开发者工具会清除您的 CSS 和 JavaScript 更改。")],-1),b=e("p",null,[a("当更改"),e("code",null,"源映射"),a("的文件时, 更改不会生效的, 此时需要去修改更改后的文件")],-1),f=o('<h2 id="在工作区中编辑和保存文件" tabindex="-1">在工作区中编辑和保存文件 <a class="header-anchor" href="#在工作区中编辑和保存文件" aria-label="Permalink to &quot;在工作区中编辑和保存文件&quot;">​</a></h2><p>在 <code>编辑</code> 窗格中所做的修改是临时的，借助工作区，可以将在开发者工具中所做的更改保存到计算机上存储的源代码中。</p><h3 id="限制" tabindex="-1">限制 <a class="header-anchor" href="#限制" aria-label="Permalink to &quot;限制&quot;">​</a></h3><p>如果使用的是现代框架，它可能会将您的源代码从一种易于维护的格式转换为经过优化、可尽快运行的格式。</p><p>工作区通常能够借助源代码映射将优化后的代码映射回原始源代码。但是如果映射信息不全或损坏的话，也就无法映射到对应的源代码</p><h3 id="设置工作区" tabindex="-1">设置工作区 <a class="header-anchor" href="#设置工作区" aria-label="Permalink to &quot;设置工作区&quot;">​</a></h3><ol><li><p>在 工作区 标签页，添加文件夹</p></li><li><p>在顶部的提示符中，点击 允许 以授予开发者工具对目录执行读取和写入的权限。</p></li><li><p>在<strong>工作区</strong>标签页中，有些文件旁边有一个绿点。这些绿点表示开发者工具已在页面的网络资源与文件之间建立了映射。</p></li></ol><p><img src="'+_+'" alt="image" loading="lazy"></p><h3 id="将更改保存到磁盘" tabindex="-1">将更改保存到磁盘 <a class="header-anchor" href="#将更改保存到磁盘" aria-label="Permalink to &quot;将更改保存到磁盘&quot;">​</a></h3><p>在 <code>编辑</code> 窗格中修改文件，按 <code>Ctrl+S</code> 保存更改，即会同步更改到对应磁盘文件上。</p><p><img src="'+n+'" alt="image" loading="lazy"></p><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li><p>如果没有建立链接的文件修改, 修改 <code>工作区</code> 标签页的文件后，会同步到本地文件上。</p></li><li><p>在<code>样式窗格</code>中对 CSS 修改，如果修改的是已经建立链接的样式，那么会同步到本地文件中。</p><p><img src="'+h+'" alt="image" loading="lazy"></p></li><li><p>如果尝试在<code>元素面板</code>中更改 HTML 的话, 该功能是不起作用的，<a href="https://developer.chrome.com/docs/devtools/workspaces?hl=zh-cn#elements" target="_blank" rel="noreferrer">因为 DOM 树 !== HTML。</a></p></li></ul></div>',12);function T(k,C,P,q,x,V){const t=i("ShowVideo");return r(),s("div",null,[u,e("div",S,[g,e("ul",null,[v,e("li",null,[b,c(t,{src:"/video/04.mp4"})])])]),f])}const z=l(m,[["render",T]]);export{J as __pageData,z as default};

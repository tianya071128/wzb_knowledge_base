import{_ as s,c as a,o as i,aR as e}from"./chunks/framework.DLAwTCsc.js";const u=JSON.parse('{"title":"install 安装包","description":"","frontmatter":{},"headers":[],"relativePath":"npm/npm-install.md","filePath":"02_工程化/06_npm/10_命令_install_安装包.md","lastUpdated":1739447932000}'),l={name:"npm/npm-install.md"},n=e('<h1 id="install-安装包" tabindex="-1">install 安装包 <a class="header-anchor" href="#install-安装包" aria-label="Permalink to &quot;install 安装包&quot;">​</a></h1><p><a href="https://docs.npmjs.com/cli/v10/commands/npm-install" target="_blank" rel="noreferrer"><code>npm install</code></a> 用于安装一个包</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [&lt;package-spec&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...]</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">aliases:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ins,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inst,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> insta,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instal,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isnt,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isnta,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isntal,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isntall</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="安装包的版本" tabindex="-1">安装包的版本 <a class="header-anchor" href="#安装包的版本" aria-label="Permalink to &quot;安装包的版本&quot;">​</a></h2><h3 id="不指定版本" tabindex="-1">不指定版本 <a class="header-anchor" href="#不指定版本" aria-label="Permalink to &quot;不指定版本&quot;">​</a></h3><p><code>npm install [&lt;@scope&gt;/]&lt;name&gt;</code> 不指定版本:</p><ul><li>存在 <code>package.json</code> 或存在 <code>package-lock</code> 类型文件，则会下载声明的语义版本控制规则的最新版本的包</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>\n<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    #</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 此时会安装</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 2.xx.xx</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 版本，而不是下载</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 3.xx.xx</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;"> 版本</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^2.6.14&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><p>不存在上述文件的话，则会按照 <strong><code>latest</code></strong> 标签指定的版本。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p><code>latest</code> 标签默认为最新版本，但是也可指定 <code>latest</code> 对应其他版本</p></div></li></ul><h3 id="指定标签" tabindex="-1">指定标签 <a class="header-anchor" href="#指定标签" aria-label="Permalink to &quot;指定标签&quot;">​</a></h3><p><code>npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;tag&gt;</code> 安装指定标签引用的包版本。<strong>如果不存在该标签, 那么将失败</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sax@latest</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @myorg/mypackage@latest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="指定版本" tabindex="-1">指定版本 <a class="header-anchor" href="#指定版本" aria-label="Permalink to &quot;指定版本&quot;">​</a></h3><p><code>npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version&gt;</code> 安装指定版本的包。如果版本尚未发布到注册中心，这将失败。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sax@0.1.1</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @myorg/privatepackage@1.5.0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="指定版本范围" tabindex="-1">指定版本范围 <a class="header-anchor" href="#指定版本范围" aria-label="Permalink to &quot;指定版本范围&quot;">​</a></h3><p><code>npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version range&gt;</code>安装与指定版本范围匹配的软件包版本。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sax@&quot;&gt;=0.1.0 &lt;0.2.0&quot;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @myorg/privatepackage@&quot;16 - 17&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="标志-控制包保存的位置和方式" tabindex="-1">标志：控制包保存的位置和方式 <a class="header-anchor" href="#标志-控制包保存的位置和方式" aria-label="Permalink to &quot;标志：控制包保存的位置和方式&quot;">​</a></h2><p>默认情况下，<code>npm install</code> 将任何指定的包保存到 <code>dependencies</code> 中。此外，您可以使用一些额外的标志来控制它们的保存位置和方式：</p><ul><li><code>-P, --save-prod</code> <strong>包将出现在你的 <strong><code>dependencies</code></strong> 中。这是默认设置，除非存在 -D 或 -O。</strong></li><li><code>-D, --save-dev</code>包将出现在你的 <code>devDependencies</code> 中。</li><li><code>-O, --save-optional</code> 包会出现在你的 <code>optionalDependencies</code> 中。</li><li><code>--no-save</code> 不保存到 <code>dependencies</code>。</li></ul><p>当使用上述任何选项将依赖项保存到 <code>package.json</code> 时，还有两个额外的可选标志：</p><ul><li><code>-E, --save-exact</code> 保存的依赖项将配置为精确版本，而不是使用 <code>npm</code> 默认的 <code>semver</code> 范围运算符。</li><li><code>-B, --save-bundle</code> 保存的依赖项也将被添加到你的 <code>bundleDependencies</code> 列表中。</li></ul><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h3 id="save-s-控制是否保存到-package-json-中" tabindex="-1"><code>--save, -S</code> 控制是否保存到 package.json 中 <a class="header-anchor" href="#save-s-控制是否保存到-package-json-中" aria-label="Permalink to &quot;`--save, -S` 控制是否保存到 package.json 中&quot;">​</a></h3><ul><li>默认值: <code>true</code></li><li>类型：<code>boolean</code></li></ul><p>将已安装的包作为依赖项保存到 <code>package.json</code> 文件中</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 保存到 package.json 的 dependencies 中，因为 --save 默认为 true，默认为 --save-prod</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 等同于 npm install vue -S -P</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将 --save 设置为 false，那么就不会保存到 package.json 中</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="save-exact-e保存为精确版本" tabindex="-1"><code>--save-exact, -E</code>保存为精确版本 <a class="header-anchor" href="#save-exact-e保存为精确版本" aria-label="Permalink to &quot;`--save-exact, -E`保存为精确版本&quot;">​</a></h3><ul><li>默认值：<code>false</code></li><li>类型：<code>boolean</code></li></ul><p>保存的依赖项将配置为精确版本，而不是使用 <code>npm</code> 默认的 <code>semver</code> 范围运算符。</p><h3 id="global-g-全局安装" tabindex="-1"><code>--global, -g</code> 全局安装 <a class="header-anchor" href="#global-g-全局安装" aria-label="Permalink to &quot;`--global, -g` 全局安装&quot;">​</a></h3><ul><li>默认值：<code>false</code></li><li>类型：<code>boolean</code></li></ul><p>在“全局”模式下运行, 以便将包安装到全局文件夹而不是当前工作目录中。</p><h3 id="force-f-忽略缓存" tabindex="-1"><code>--force, -f</code> 忽略缓存 <a class="header-anchor" href="#force-f-忽略缓存" aria-label="Permalink to &quot;`--force, -f` 忽略缓存&quot;">​</a></h3><ul><li>默认值：<code>false</code></li><li>类型：<code>boolean</code></li></ul><p>将强制 <code>npm</code> 获取远程资源，即使磁盘上存在本地副本也是如此。</p><h3 id="package-lock-是否更新-package-lock-文件中的版本" tabindex="-1"><code>--package-lock</code> 是否更新 <code>package-lock</code> 文件中的版本 <a class="header-anchor" href="#package-lock-是否更新-package-lock-文件中的版本" aria-label="Permalink to &quot;`--package-lock` 是否更新 `package-lock` 文件中的版本&quot;">​</a></h3><ul><li>默认值：<code>true</code></li><li>类型：<code>boolean</code></li></ul><p>默认情况下, 会自动更新 <code>package-lock</code> 锁文件的版本, 如果设置为 <code>false</code> 这将阻止写入 <code>package-lock.json</code>。</p><h3 id="install-strategy-安装策略" tabindex="-1"><code>install-strategy</code> 安装策略 <a class="header-anchor" href="#install-strategy-安装策略" aria-label="Permalink to &quot;`install-strategy` 安装策略&quot;">​</a></h3><ul><li>默认值：<code>hoisted</code></li><li>类型： &quot;hoisted&quot;, &quot;nested&quot;, &quot;shallow&quot;, or &quot;linked&quot;</li></ul><p>设置在 <code>node_modules</code> 中安装包的策略。</p><ul><li><p>hoisted：提升，在顶级中不重复安装，并根据需要在目录结构中进行复制。</p></li><li><p>nested(以前的 <code>--legacy-bundling</code>)：就地安装，不在 <code>node_modules</code> 中提升包安装，而是以它们所依赖的相同方式安装包。</p></li><li><p>shallow(以前的 <code>--global-style</code>)：仅在顶级 <code>node_modules</code> 中安装直接依赖项，但提升更深层次的依赖项。</p></li><li><p>linked(实验性)：安装在 <code>node_modules/.store</code> 中，链接到位，未提升。</p></li></ul>',44),t=[n];function p(o,d,h,c,r,k){return i(),a("div",null,t)}const F=s(l,[["render",p]]);export{u as __pageData,F as default};

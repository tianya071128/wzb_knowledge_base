import{_ as a,c as e,o as t,aR as o,fy as r}from"./chunks/framework.DLAwTCsc.js";const S=JSON.parse('{"title":"覆盖率(Coverage)","description":"","frontmatter":{},"headers":[],"relativePath":"devtools/coverage.md","filePath":"04_更多/02_开发者工具/29_覆盖率.md","lastUpdated":1739447932000}'),i={name:"devtools/coverage.md"},l=o('<h1 id="覆盖率-coverage" tabindex="-1">覆盖率(Coverage) <a class="header-anchor" href="#覆盖率-coverage" aria-label="Permalink to &quot;覆盖率(Coverage)&quot;">​</a></h1><p>覆盖率面板可以找到未使用的 JavaScript 和 CSS 代码。移除未使用的代码可以加快网页加载速度，并节省用户的移动数据流量。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>查找未使用的代码相对容易。相比之下，重构代码库以使每个网页仅包含必要的 JavaScript 和 CSS 并非易事。此类重构在很大程度上依赖于开发技术栈。</p></div><h2 id="分析代码覆盖率" tabindex="-1">分析代码覆盖率 <a class="header-anchor" href="#分析代码覆盖率" aria-label="Permalink to &quot;分析代码覆盖率&quot;">​</a></h2><p>覆盖率面板中的表格显示了分析了哪些资源以及每项资源使用了多少代码。</p><p>点击某一行即可在来源面板中打开该资源，并查看已使用代码和未使用的代码逐行细分。<strong>所有未使用的代码行都会用红线标记</strong>，列旁边会显示行号。</p><ul><li>网址列：是所分析资源的网址。</li><li>类型列：显示资源是包含 CSS 和/或 JavaScript。</li><li>总字节列：是资源的总大小（以字节为单位）。</li><li>未使用的字节数列：是未使用的字节数。</li><li>使用情况可视化图表列：是直观显示 总字节 和 未使用的字节数 列。竖条的红色部分是未使用的字节。灰色部分使用字节。</li></ul><p><img src="'+r+'" alt="img" loading="lazy"></p>',8),s=[l];function c(_,p,n,d,h,m){return t(),e("div",null,s)}const g=a(i,[["render",c]]);export{S as __pageData,g as default};

import{_ as a,c as e,o as l,aR as o,cH as t}from"./chunks/framework.DLAwTCsc.js";const m=JSON.parse('{"title":"outdated 检查过时包","description":"","frontmatter":{},"headers":[],"relativePath":"npm/npm-outdated.md","filePath":"02_工程化/06_npm/13_命令_outdated_过时包.md","lastUpdated":1739447932000}'),d={name:"npm/npm-outdated.md"},i=o('<h1 id="outdated-检查过时包" tabindex="-1">outdated 检查过时包 <a class="header-anchor" href="#outdated-检查过时包" aria-label="Permalink to &quot;outdated 检查过时包&quot;">​</a></h1><p><a href="https://docs.npmjs.com/cli/v10/commands/npm-outdated" target="_blank" rel="noreferrer"><code>npm outdated</code></a> 用于检查过时的包(需要更新的包)</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> outdated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [&lt;package-spec&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h2><ul><li>此命令将联网检查当前是否有<strong>任何(或特定)已安装的软件包已过时</strong>。</li><li>默认情况下，仅显示根项目的直接依赖项和配置的工作区的直接依赖项。<strong>使用 <strong><code>--all</code></strong> 也可以查找所有过时的元依赖项</strong>。</li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p><img src="'+t+'" alt="image.png" loading="lazy"></p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h3 id="all-a-显示所有过时的包" tabindex="-1"><code>--all, -a</code> 显示所有过时的包 <a class="header-anchor" href="#all-a-显示所有过时的包" aria-label="Permalink to &quot;`--all, -a` 显示所有过时的包&quot;">​</a></h3><ul><li>默认值: <code>false</code></li><li>类型：<code>boolean</code><ul><li><code>true</code> 将显示所有过时或已安装的包</li><li><code>false</code> 当前项目直接依赖的包</li></ul></li></ul><h3 id="long-l-显示更多扩展信息" tabindex="-1"><code>--long, -l</code> 显示更多扩展信息 <a class="header-anchor" href="#long-l-显示更多扩展信息" aria-label="Permalink to &quot;`--long, -l` 显示更多扩展信息&quot;">​</a></h3><ul><li>默认值: <code>false</code></li><li>类型：<code>boolean</code><ul><li><code>true</code> 将显示更多信息, 例如: <code>Homepage(主页)</code>、<code>Package Type(包类型)</code></li></ul></li></ul><h3 id="global-g-全局模式" tabindex="-1"><code>--global, -g</code> 全局模式 <a class="header-anchor" href="#global-g-全局模式" aria-label="Permalink to &quot;`--global, -g` 全局模式&quot;">​</a></h3><ul><li>默认值：<code>false</code></li><li>类型：<code>boolean</code><ul><li><code>true</code>在“全局”模式下运行, 检查全局过时的包</li></ul></li></ul>',14),s=[i];function n(c,r,h,u,p,_){return l(),e("div",null,s)}const b=a(d,[["render",n]]);export{m as __pageData,b as default};

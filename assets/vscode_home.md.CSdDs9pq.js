import{_ as a,c as e,o as i,aR as s}from"./chunks/framework.DLAwTCsc.js";const _=JSON.parse('{"title":"设置","description":"","frontmatter":{},"headers":[],"relativePath":"vscode/home.md","filePath":"02_工程化/01_vscode/01_设置.md","lastUpdated":1739447932000}'),t={name:"vscode/home.md"},l=s(`<h1 id="设置" tabindex="-1">设置 <a class="header-anchor" href="#设置" aria-label="Permalink to &quot;设置&quot;">​</a></h1><p>VS Code 的编辑器、用户界面和功能行为的每个部分几乎都有可以修改的选项。</p><h2 id="设置范围" tabindex="-1">设置范围 <a class="header-anchor" href="#设置范围" aria-label="Permalink to &quot;设置范围&quot;">​</a></h2><p>VS Code 提供了不同的设置范围：</p><ul><li><p>用户设置：全局应用于您打开的任何 VS Code 实例的设置。</p></li><li><p>工作区设置：一个窗口实例的设置。</p></li><li><p>文件夹设置：针对指定文件夹设置，会在文件夹中 <code>.vscode/settings.json</code> 设置</p></li></ul><h3 id="设置和安全性-不允许在工作区的设置" tabindex="-1">设置和安全性（不允许在工作区的设置） <a class="header-anchor" href="#设置和安全性-不允许在工作区的设置" aria-label="Permalink to &quot;设置和安全性（不允许在工作区的设置）&quot;">​</a></h3><p>某些设置允许您指定 VS Code 将运行以执行某些操作的可执行文件。为了增强安全性，此类设置只能在用户设置中定义，而不能在工作区范围内定义。</p><p>以下是工作区设置中不支持的设置列表：</p><ul><li><code>git.path</code></li><li><code>terminal.external.windowsExec</code></li><li><code>terminal.external.osxExec</code></li><li><code>terminal.external.linuxExec</code></li></ul><p>第一次打开定义任何这些设置的工作区时，VS Code 会警告你，然后总是忽略之后的值。</p><h3 id="设置优先级" tabindex="-1">设置优先级 <a class="header-anchor" href="#设置优先级" aria-label="Permalink to &quot;设置优先级&quot;">​</a></h3><p>原始类型和数组类型的值被覆盖，但对象类型的值被合并。</p><p>文件夹设置 &gt; 工作区设置 &gt; 用户设置</p><h3 id="特定语言的设置" tabindex="-1">特定语言的设置 <a class="header-anchor" href="#特定语言的设置" aria-label="Permalink to &quot;特定语言的设置&quot;">​</a></h3><p>可以将设置针对特定语言：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[vue]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="同步设置" tabindex="-1">同步设置 <a class="header-anchor" href="#同步设置" aria-label="Permalink to &quot;同步设置&quot;">​</a></h2><p>目前的最新版本支持 <code>github</code> 登录并可以进行同步设置.</p><p>目前支持内容:设置、键盘快捷键、扩展、用户片段和 UI 状态。</p><h3 id="设置步骤" tabindex="-1">设置步骤 <a class="header-anchor" href="#设置步骤" aria-label="Permalink to &quot;设置步骤&quot;">​</a></h3><p>左下角齿轮菜单 -&gt; 打开设置同步 -&gt; 选择需要同步的内容 -&gt; 选择登录方式 -&gt; 后台会进行设置同步</p><h3 id="同步冲突" tabindex="-1">同步冲突 <a class="header-anchor" href="#同步冲突" aria-label="Permalink to &quot;同步冲突&quot;">​</a></h3><p>当发生冲突时, 会有如下选项解决冲突:</p><ul><li><p><strong>合并</strong>：选择此选项会将<strong>本地</strong>设置与云中的<strong>远程</strong>设置合并。</p></li><li><p><strong>替换本地</strong>：选择此选项将使用云中的远程设置覆盖<strong>本地</strong>设置。</p></li><li><p><strong>显示冲突</strong>：选择此项将显示一个类似于 Source Control diff 编辑器的 diff 编辑器，您可以在其中预览本地和远程设置并选择接受本地或远程或手动解决本地设置文件中的更改，然后接受本地文件。</p></li></ul><h3 id="同步管理" tabindex="-1">同步管理 <a class="header-anchor" href="#同步管理" aria-label="Permalink to &quot;同步管理&quot;">​</a></h3><p>当设置同步后, 在最左侧的菜单中有一个是 <code>设置同步</code>, 用来管理同步设置的</p><ul><li>同步活动(远程): 远程备份, 会保留每个单独资源（设置、扩展等）的最新 20 个版本。可以选择指定版本进行还原</li><li>同步活动(本地): 默认情况下，本地同步活动视图是隐藏的，您可以使用<strong>设置同步</strong>视图溢出操作下的<strong>视图</strong>子菜单启用它。</li><li>已同步的计算机: 设置同步的计算机, 可以重命名</li></ul>`,27),o=[l];function n(r,d,p,h,c,u){return i(),e("div",null,o)}const b=a(t,[["render",n]]);export{_ as __pageData,b as default};

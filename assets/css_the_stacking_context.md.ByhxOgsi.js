import{_ as e,c as o,o as a,aR as l,aY as t}from"./chunks/framework.DLAwTCsc.js";const m=JSON.parse('{"title":"层叠上下文","description":"","frontmatter":{},"headers":[],"relativePath":"css/the_stacking_context.md","filePath":"01_前端/02_css/07_层叠上下文.md","lastUpdated":1739447932000}'),i={name:"css/the_stacking_context.md"},c=l('<h1 id="层叠上下文" tabindex="-1">层叠上下文 <a class="header-anchor" href="#层叠上下文" aria-label="Permalink to &quot;层叠上下文&quot;">​</a></h1><p>假定用户正面向（浏览器）视窗或网页，而 HTML 元素沿着其相对于用户的一条虚构的 z 轴排开，<strong>层叠上下文</strong>就是对这些 HTML 元素的一个三维构想，<strong>用来决定元素在 z 轴上的排列顺序</strong>。</p><h2 id="层叠上下文的创建" tabindex="-1">层叠上下文的创建 <a class="header-anchor" href="#层叠上下文的创建" aria-label="Permalink to &quot;层叠上下文的创建&quot;">​</a></h2><ul><li>天生派：页面根元素(<code>&lt;html&gt;</code>)天生具有层叠上下文，称为根层叠上下文。</li><li>正统派：<code>z-index</code> 值为数值的定位元素的传统 “层叠上下文”。</li><li>扩招派：其他 <code>CSS3</code> 属性： <ul><li>元素为 <code>flex</code> 布局元素（父元素 <code>display:flex|inline-flex</code>），同时 z-index 值不是 <code>auto</code>。</li><li>元素的 <code>opacity</code> 值不是 1。</li><li>元素的 <code>transform</code> 值不是 <code>none</code>。</li><li>元素 <code>mix-blend-mode</code> 值不是 <code>normal</code>。</li><li>元素的 <code>filter</code> 值不是 <code>none</code>。</li><li>元素的 <code>isolation</code> 值是 <code>isolate</code>。</li><li>元素的 <code>will-change</code> 属性值为上面 2 ～ 6 的任意一个（如 <code>will-change:opacity</code>、 <code>will-chang:transform</code> 等）。 -- <strong>不是 <code>will-change</code> 所有的属性都会单独创建新图层，因为只有上述属性才会只涉及图层的渲染，此时交给 GPU 处理的话才存在意义</strong></li><li>元素的<code>-webkit-overflow-scrolling</code> 设为 <code>touch</code>。</li><li>还可能有其他扩展属性，可参考这个<a href="https://developer.mozilla.org/zh-CN/docs/web/css/css_positioning/understanding_z_index/the_stacking_context#%E5%B1%82%E5%8F%A0%E4%B8%8A%E4%B8%8B%E6%96%87" target="_blank" rel="noreferrer">列表</a></li></ul></li></ul><h2 id="层叠上下文的规则" tabindex="-1">层叠上下文的规则 <a class="header-anchor" href="#层叠上下文的规则" aria-label="Permalink to &quot;层叠上下文的规则&quot;">​</a></h2><ol><li>在层叠上下文中，子元素同样也按照上面解释的规则进行层叠。</li><li><strong>其子级层叠上下文的 <code>z-index</code> 值只在父级中才有意义</strong>。</li><li>层叠上下文可以包含在其他层叠上下文中，并且一起创建一个层叠上下文的层级。</li><li>每个层叠上下文都完全独立于它的兄弟元素：当处理层叠时只考虑子元素。</li><li>每个层叠上下文都是自包含的：当一个元素的内容发生层叠后，该元素将被作为整体在父级层叠上下文中按顺序进行层叠。</li></ol><h2 id="层叠上下文的层叠顺序" tabindex="-1">层叠上下文的层叠顺序 <a class="header-anchor" href="#层叠上下文的层叠顺序" aria-label="Permalink to &quot;层叠上下文的层叠顺序&quot;">​</a></h2><p><img src="'+t+'" alt="img" loading="lazy"></p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/web/css/css_positioning/understanding_z_index/the_stacking_context" target="_blank" rel="noreferrer">MDN - 层叠上下文</a></p><p><a href="https://dev.opera.com/articles/css-will-change-property/" target="_blank" rel="noreferrer">关于 CSS will-change 属性你需要知道的一切</a></p>',11),r=[c];function d(n,s,_,h,p,g){return a(),o("div",null,r)}const u=e(i,[["render",d]]);export{m as __pageData,u as default};
